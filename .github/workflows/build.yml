# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Angular SSG async routes file
        uses: tegain/angular-ssg-async-routes-file-action@1.0.0
        with:
          url: 'https://api.jsonbin.io/v3/qs/65898bbfdc74654018888f7c'
          responsePath: 'record'
          file: 'routes.txt'
      - name: Build
        run: npm run build --if-present
      - name: List dist files
        run: ls -R dist/ng-ssg-async
      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Deployed from GitHub action"
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: 'dist/ng-ssg-async/browser'
          install_command: "echo Skipping installing the dependencies"
          build_command: "echo Skipping building the web files"
